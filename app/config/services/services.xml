<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <defaults autowire="true" autoconfigure="true" public="false">
            <bind key="$donationRequestUtilsLocator" type="service" id="app.donation_request.utils.locator" />
            <bind key="$environment">%kernel.environment%</bind>
        </defaults>

        <!-- History -->
        <prototype namespace="AppBundle\History\" resource="../../../src/History/" />

        <!-- Adherents -->
        <service id="AppBundle\Membership\AdherentManager" />
        <service id="AppBundle\Membership\AdherentRegistry" public="true" />

        <!-- Algolia -->
        <service id="AppBundle\Algolia\AlgoliaIndexedEntityManager" />
        <service id="AppBundle\Algolia\ManualIndexer" />
        <service id="AppBundle\Command\AlgoliaSynchronizeCommand" />

        <!-- CitizenProject -->
        <service id="AppBundle\CitizenProject\CitizenProjectAuthority" />
        <service id="AppBundle\CitizenProject\CitizenProjectCommentCreationCommandHandler" public="true">
            <argument key="$mailer" type="service" id="app.mailer.transactional"/>
        </service>
        <service id="AppBundle\CitizenProject\CitizenProjectManager">
            <call method="setGlide">
                <argument type="service" id="app.glide" />
            </call>
        </service>
        <service id="AppBundle\MediaGenerator\Pdf\CitizenProjectTractGenerator" public="true">
            <argument type="service" id="knp_snappy.pdf"/>
        </service>
        <service id="AppBundle\MediaGenerator\Image\CitizenProjectCoverGenerator" public="true">
            <argument type="service" id="knp_snappy.image"/>
        </service>

        <!-- CitizenActions -->
        <service id="AppBundle\CitizenAction\CitizenActionMessageNotifier">
            <argument key="$mailer" type="service" id="app.mailer.transactional" />
        </service>

        <service id="AppBundle\CitizenAction\CitizenActionParticipantsExporter" public="true" />

        <service id="AppBundle\CitizenAction\CitizenActionContactParticipantsCommandHandler" public="true">
            <argument type="service" id="app.mailer.campaign" />
        </service>

        <!-- Controller -->
        <prototype namespace="AppBundle\Controller\" resource="../../../src/Controller/">
            <tag name="controller.service_arguments" />
        </prototype>
        <prototype namespace="AppBundle\Controller\Admin\" resource="../../../src/Controller/Admin" public="true">
            <tag name="controller.service_arguments" />
        </prototype>

        <!-- Donation -->
        <service id="AppBundle\Command\DonationUpdateReferenceCommand" />
        <service id="AppBundle\Validator\PayboxSubscriptionValidator" />
        <service id="AppBundle\Validator\UniqueDonationSubscriptionValidator" />
        <service id="AppBundle\Validator\MaxFiscalYearDonationValidator" />
        <service id="AppBundle\Donation\DonationFactory" />
        <service id="AppBundle\Donation\PayboxPaymentUnsubscription">
            <argument type="service" key="$mailer" id="app.mailer.transactional" />
        </service>
        <service id="AppBundle\Donation\TransactionSubscriber">
            <argument type="service" key="$mailer" id="app.mailer.transactional" />
        </service>
        <service id="AppBundle\Donation\TransactionCallbackHandler">
            <argument type="service" key="$mailer" id="app.mailer.transactional" />
        </service>
        <service id="AppBundle\Donation\DonationRequestHandler"/>
        <service id="AppBundle\Donation\DonationRequestUtils" />

        <service id="app.donation_request.utils.locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
            <argument type="collection">
                <argument key="validator" type="service" id="validator" />
                <argument key="session" type="service" id="session" />
                <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" />
            </argument>
            <tag name="container.service_locator" />
        </service>

        <service id="AppBundle\Donation\PayboxFormFactory" />

        <!-- Membership -->
        <service id="AppBundle\Membership\MembershipRegistrationProcess"/>
        <service id="AppBundle\Membership\AdherentChangeEmailHandler">
            <argument key="$mailer" type="service" id="app.mailer.transactional" />
        </service>
        <service id="AppBundle\Membership\EventListener\ChangeEmailFlashMessageSubscriber" />

        <!-- Event -->
        <service id="AppBundle\Event\EventFactory" public="true" />
        <service id="AppBundle\Event\EventCanceledHandler" />

        <service id="AppBundle\Event\EventRegistrationSubscriber">
            <argument type="service" id="app.mailer.transactional" />
        </service>

        <!-- EventListener -->
        <service id="AppBundle\EventListener\ProcurationMailerSubscriber">
            <argument key="$mailer" type="service" id="app.mailer.transactional" />
        </service>
        <prototype namespace="AppBundle\EntityListener\" resource="../../../src/EntityListener/">
            <tag name="doctrine.orm.entity_listener" />
        </prototype>

        <!-- Exporter -->
        <prototype namespace="AppBundle\Exporter\" resource="../../../src/Exporter/" />

        <!-- Form -->
        <service id="AppBundle\Form\CitizenProjectCommentCommandType"/>
        <service id="AppBundle\Form\CitizenProjectCommandType"/>
        <service id="AppBundle\Form\EventListener\AmpSynchronisedListener"/>
        <service id="AppBundle\Form\EventRegistrationType"/>
        <service id="AppBundle\Form\ColorChoiceType"/>
        <service id="AppBundle\Form\DonationRequestType"/>
        <service id="AppBundle\Form\PurifiedTextareaType">
            <argument type="collection">
                <argument key="default" type="service" id="app.html_purifier.default"/>
                <argument key="enrich_content" type="service" id="app.html_purifier.enrich_content"/>
            </argument>
        </service>
        <service id="AppBundle\Form\CommitteeAroundAdherentType"/>

        <!-- GeoCoder -->
        <service id="GeoIp2\WebService\Client">
            <argument>%env(MAXMIND_USER_ID)%</argument>
            <argument>%env(MAXMIND_LICENSE_KEY)%</argument>
        </service>
        <service id="GeoIp2\ProviderInterface" alias="GeoIp2\WebService\Client"/>
        <service id="AppBundle\Address\GeoCoder"/>

        <!-- Procuration -->
        <service id="AppBundle\Procuration\ProcurationManager" public="true" />
        <service id="AppBundle\Procuration\ProcurationRequestSerializer" />
        <service id="AppBundle\Procuration\ProcurationSession" />

        <!-- Referent -->
        <service id="AppBundle\Command\ReferentTagImportCommand"/>
        <service id="AppBundle\Command\ReferentTagInitializeCommitteeEvent"/>
        <service id="AppBundle\Referent\ReferentTagManager" />
        <service id="AppBundle\Referent\ManagedCommitteesExporter" />
        <service id="AppBundle\Referent\ManagedEventsExporter" />

        <!-- Report -->
        <service id="AppBundle\Report\ReportManager" />
        <service id="AppBundle\Form\ReportCommandType"/>
        <service id="AppBundle\Report\ReportCreationCommandHandler"/>

        <!-- Repository -->
        <prototype namespace="AppBundle\Repository\" resource="../../../src/Repository/*" />

        <!-- Security -->
        <prototype namespace="AppBundle\Security\Voter\" resource="../../../src/Security/Voter"/>
        <service id="AppBundle\Security\Http\AuthenticationFailureHandler"/>
        <service id="AppBundle\Security\UserChecker"/>
        <service id="app.security.user_provider" class="AppBundle\Security\UserProvider">
            <argument key="$classOrAlias" type="string">AppBundle\Entity\Adherent</argument>
        </service>
        <service id="app.security.admin_provider" class="AppBundle\Security\UserProvider">
            <argument key="$classOrAlias" type="string">AppBundle\Entity\Administrator</argument>
        </service>

        <!-- Timeline -->
        <service id="AppBundle\Command\TimelineImportCommand"/>
        <service id="AppBundle\Command\TimelineSynchronizeCommand"/>
        <service id="AppBundle\Form\EventListener\EmptyTranslationRemoverListener">
            <argument>%locales%</argument>
            <argument>%locale%</argument>
        </service>
        <service id="AppBundle\Timeline\TimelineFactory" />
        <service id="AppBundle\Timeline\TimelineImageFactory" public="true">
            <argument key="$cacheDirectory">%kernel.cache_dir%</argument>
            <argument key="$webDirectory">%kernel.root_dir%/../web</argument>
        </service>

        <!--Command-->
        <service id="AppBundle\Command\ApiScheduleCommitteeCreationCommand" />
        <service id="AppBundle\Command\ApiScheduleEventCreationCommand" />
        <service id="AppBundle\Command\InitializeEmailSubscriptionHistoryCommand"/>
        <service id="AppBundle\Command\ImportDistrictsCommand"/>
        <service id="AppBundle\Command\BindDeputiesToDistrictsCommand"/>

        <!-- UserDocument -->
        <service id="AppBundle\UserDocument\UserDocumentManager" public="true" />

        <!-- HTML Purifiers -->
        <service id="app.html_purifier.default" class="Exercise\HTMLPurifierBundle\Form\HTMLPurifierTransformer">
            <argument type="service" id="exercise_html_purifier.default"/>
        </service>
        <service id="app.html_purifier.enrich_content" class="Exercise\HTMLPurifierBundle\Form\HTMLPurifierTransformer">
            <argument type="service" id="exercise_html_purifier.enrich_content"/>
        </service>
        <service id="AppBundle\HTMLPurifier\Injector\ImageDimension">
            <argument>%image_max_length%</argument>
        </service>

        <!-- Validators -->
        <service id="AppBundle\Validator\DateRangeValidator" />

        <!-- History -->
        <service id="AppBundle\History\EmailSubscriptionHistoryHandler" />

        <!-- Republican Silence -->
        <service id="AppBundle\Command\RepublicanSilenceCloseEventCommand" />
        <service id="AppBundle\RepublicanSilence\CheckRepublicanSilenceListener" />
        <service id="AppBundle\RepublicanSilence\RepublicanSilenceManager">
            <argument type="service" key="$cache">
                <service class="Symfony\Component\Cache\Simple\Psr6Cache">
                    <argument type="service" id="app.cache.republican_silence" />
                </service>
            </argument>
        </service>

        <!-- Deputy -->
        <service id="AppBundle\Deputy\DistrictLoader" public="true" />
        <service id="AppBundle\Deputy\LightFileDistrictLoader" public="true" />
        <service id="AppBundle\Deputy\DeputyMessageNotifier" public="true">
            <argument type="service" id="app.mailer.transactional"/>
        </service>

        <service id="AppBundle\Security\ApiAuthenticationEntryPoint"/>

        <!-- Subscription -->
        <service id="AppBundle\Subscription\SubscriptionListener" />
    </services>
</container>
